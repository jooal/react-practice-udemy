{"ast":null,"code":"import _classCallCheck from \"/Users/alexjoo/Desktop/my-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alexjoo/Desktop/my-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alexjoo/Desktop/my-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alexjoo/Desktop/my-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alexjoo/Desktop/my-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/alexjoo/Desktop/my-react-app/src/App1.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Card from \"./components/Cards/Card\";\n\nvar App1 =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App1, _Component);\n\n  function App1() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App1);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App1)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      persons: [{\n        name: 'Max',\n        age: 28\n      }, {\n        name: 'Bob',\n        age: 22\n      }, {\n        name: 'Tim',\n        age: 27\n      }],\n      otherState: \"some other value\" // should use const functions as much as possible, use state carefully and only when necessary bcuz more states in yoru app equals more uncertainty \n\n    };\n\n    _this.switchNameHandler = function (newName) {\n      console.log(\"was clicked\"); //  DONT DO THIS: this.state.persons[0].name = \"Maximus\";\n\n      _this.setState({\n        persons: [{\n          name: newName,\n          age: 28\n        }, {\n          name: 'Greg',\n          age: 22\n        }, {\n          name: 'Bob',\n          age: 35\n        }]\n      });\n    };\n\n    _this.nameChangeHandler = function (event) {\n      _this.setState({\n        persons: [{\n          name: \"Max\",\n          age: 28\n        }, {\n          name: event.target.value,\n          age: 22\n        }, // event.target.value is getting input value for onchange event\n        {\n          name: 'Bob',\n          age: 35\n        }]\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App1, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Hi, I'm a React App\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.switchNameHandler(\"Max!!!!\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Switch Name\"), React.createElement(Card, {\n        name: this.state.persons[0].name,\n        age: this.state.persons[0].age,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"My Hobbies: Smacking people. \"), React.createElement(Card, {\n        name: this.state.persons[1].name,\n        age: this.state.persons[1].age,\n        click: this.switchNameHandler.bind(this, \"Max!\"),\n        changed: this.nameChangeHandler // this click prop allows us to use transfer the switchnameHandler to card.JSX\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(Card, {\n        name: this.state.persons[2].name,\n        age: this.state.persons[2].age,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })); // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?') );\n      //adding classname allows css to be applied\n      //div is the parent, can add as many children \n      //h1 is children of div and nested in div\n      //this line of code is exact same as the return code JSX above but is not efficient \n    }\n  }]);\n\n  return App1;\n}(Component);\n\nexport default App1;","map":{"version":3,"sources":["/Users/alexjoo/Desktop/my-react-app/src/App1.js"],"names":["React","Component","Card","App1","state","persons","name","age","otherState","switchNameHandler","newName","console","log","setState","nameChangeHandler","event","target","value","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Card from \"./components/Cards/Card\";\n\nclass App1 extends Component {\n  state = {\n    persons: [\n      {name: 'Max', age: 28},\n      {name: 'Bob', age: 22},\n      {name: 'Tim', age: 27}\n    ], \n\n    otherState: \"some other value\"\n  }\n  // should use const functions as much as possible, use state carefully and only when necessary bcuz more states in yoru app equals more uncertainty \n  switchNameHandler = (newName) => {\n    console.log(\"was clicked\");\n    //  DONT DO THIS: this.state.persons[0].name = \"Maximus\";\n    this.setState({\n      persons:[\n        {name: newName, age: 28},\n        {name: 'Greg', age: 22},\n        {name: 'Bob', age: 35}\n      ]})\n  }\n\n  nameChangeHandler = (event) => {\n    this.setState({\n      persons:[\n        {name: \"Max\", age: 28},\n        {name: event.target.value, age: 22},\n        // event.target.value is getting input value for onchange event\n        {name: 'Bob', age: 35}\n      ]})\n  }\n  \n  \n  render() {\n    return (\n      <div className=\"App\">\n       <h1>Hi, I'm a React App</h1>\n       <button onClick={()=> this.switchNameHandler(\"Max!!!!\")}>Switch Name</button>\n       {/* using arrow function in onclick, this may fire over and over so use bind method if possible  */}\n       {/* dont add () after handler event or else fires as soon as react loads */}\n      <Card \n      name={this.state.persons[0].name} \n      age={this.state.persons[0].age}>My Hobbies: Smacking people. </Card>\n      <Card \n      name={this.state.persons[1].name} \n      age={this.state.persons[1].age}\n      click={this.switchNameHandler.bind(this, \"Max!\")}\n      changed={this.nameChangeHandler}\n      // this click prop allows us to use transfer the switchnameHandler to card.JSX\n   />\n      <Card \n      name={this.state.persons[2].name} \n      age={this.state.persons[2].age}/>\n      </div>\n          );\n\n    // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?') );\n    //adding classname allows css to be applied\n    //div is the parent, can add as many children \n    //h1 is children of div and nested in div\n    //this line of code is exact same as the return code JSX above but is not efficient \n  }\n}\n\nexport default App1;\n"]},"metadata":{},"sourceType":"module"}